---
- name: Check if Docker is installed
  command: docker --version
  register: docker_check
  ignore_errors: yes
  changed_when: false

- name: Install Docker if not present
  block:
    - name: Display Python version
      command: python3 --version
      register: python_version
    - debug:
        var: python_version.stdout

    - name: Ensure dnf-plugins-core is installed
      dnf:
        name: dnf-plugins-core
        state: present

    - name: Update dnf cache
      dnf:
        update_cache: yes

    - name: Install required packages
      dnf:
        name:
          - dnf-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Add Docker repository
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Modify repo file to use centos-8 instead of centos-$releasever
      replace:
        path: /etc/yum.repos.d/docker-ce.repo
        regexp: '\$releasever'
        replace: '8'

    - name: Install Docker
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Update Docker configuration
      template:
        src: docker-config.j2
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: Install pip
      dnf:
        name: python3-pip
        state: present

    - name: Install Docker Python module
      pip:
        name: docker
        extra_args: --user
        executable: pip3
      become: yes
      become_user: "{{ docker_user }}"

    - name: Add {{ docker_user }} to docker group
      user:
        name: "{{ docker_user }}"
        groups: docker
        append: yes

    - name: Ensure local bin is in PATH
      lineinfile:
        dest: "/home/{{ docker_user }}/.bashrc"
        line: 'export PATH=$PATH:$HOME/.local/bin'
        state: present
      become_user: "{{ docker_user }}"

  when: docker_check.rc != 0

- name: Check Docker Hub login status
  command: docker info
  register: docker_info
  changed_when: false
  ignore_errors: yes

- name: Log in to Docker Hub
  docker_login:
    username: "{{ docker_hub_username }}"
    password: "{{ docker_hub_password }}"
  no_log: true
  register: docker_login_result
  ignore_errors: yes
  when: "'Username' not in docker_info.stdout"

- name: Display Docker login error
  debug:
    msg: "Failed to log in to Docker Hub: {{ docker_login_result.msg }}"
  when:
    - "'Username' not in docker_info.stdout"
    - docker_login_result is failed

- name: Reload bash profile
  shell: "source /home/{{ docker_user }}/.bashrc"
  args:
    executable: /bin/bash
  become_user: "{{ docker_user }}"
